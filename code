import numpy as np
import pandas as pd
births =pd.read_csv('/content/births.csv')
births.head()
births['day'].fillna(0,inplace=True)
births['day']=births['day'].astype(int)
births.head()
births['decade']= 10 * (births['year']//10)
births.pivot_table('births',index='decade',columns='gender',aggfunc='sum')
births.head()
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()
birth_decade=births.pivot_table('births',index='decade',columns='gender',aggfunc='sum')
birth_decade.plot()
plt.ylabel('Total births per year')
plt.show()
import numpy as np
quartiles=np.percentile(births['births'],[25,50,75])
mean=quartiles[1]
sigma=0.74*(quartiles[2]-quartiles[0])
births = births.query('(births > @mean - 5* @sigma) & (births < @mean + 5 * @sigma)')
# Use pd.to_datetime instead of pd.to_time
birth_index = pd.to_datetime(10000 * births.year + 100 * births.month + births.day, format='%Y%m%d')
#The format was also incorrect and should be %Y%m%d to reflect the order of year, month and day in the formula above
# birth_index is a Series; you need to access the dt accessor to get the dayofweek property
births['day of the week'] = birth_index.dt.dayofweek #assign dayofweek from birth_index
births.index = birth_index # if you intended to change the index of the births dataframe
births_day=births.pivot_table('births',index='day of the week',columns='decade',aggfunc='mean')
births_day.index=['Mon','tue','wed','thur','fri','sat','sun']
births_day.plot()
plt.show()
import pandas as pd
from datetime import datetime #import the datetime module

births_month=births.pivot_table('births',[births.index.month,births.index.day])
births_month=births.pivot_table('births',[births.index.month,births.index.day])
print(births_month.head())
#Use datetime.datetime instead of pd.datetime
births_month.index=[datetime(2012,month,day) for (month,day) in births_month.index] 
#Alternatively, you can use pd.Timestamp if you prefer to work with pandas Timestamp objects
#births_month.index = [pd.Timestamp(2012, month, day) for (month, day) in births_month.index]
print(births_month.head())
fig,ax= plt.subplots(figsize=(12,4))
births_month.plot(ax=ax)
plt.show()
